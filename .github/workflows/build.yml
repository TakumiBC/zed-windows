name: Build Zed for Windows

on:
  workflow_dispatch:
  schedule:
    - cron: 0 16 * * *


jobs:
  Check:
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.check.outputs.should_run }}
      tag: ${{ steps.check.outputs.tag }}
    steps:
      - name: Check Latest Releases
        id: check
        run: |
          zed_tag=$(echo $(curl -s https://api.github.com/repos/zed-industries/zed/releases/latest) | jq -r '.tag_name')
          prerelease=$(echo $(curl -s https://api.github.com/repos/zed-industries/zed/releases/latest) | jq -r '.prerelease')
          echo "Latest Zed Release: $zed_tag (prerelease: $prerelease)"
          win_tag=$(echo $(curl -s https://api.github.com/repos/TakumiBC/zed-windows/releases/latest) | jq -r '.tag_name')
          echo "Latest Windows Release: $win_tag"
          if [[ "$zed_tag" != "$win_tag" && "$prerelease" == "false" ]]; then
            echo "New valid release $zed_tag found!"
            echo "should_run=true" >> $GITHUB_OUTPUT
            echo "tag=$zed_tag" >> $GITHUB_OUTPUT
          else
            echo "No new valid release"
            echo "should_run=false" >> $GITHUB_OUTPUT
          fi
          
  Build:
    needs: [Check]
    if: needs.Check.outputs.should_run == 'true'
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    - name: Install Toolchain
      run: rustup target add wasm32-wasip1

    - name: Clone Source Code
      run: |
        git config --global user.email 41898282+github-actions[bot]@users.noreply.github.com
        git config --global user.name github-actions[bot]
        git config --global core.longpaths true
        git clone https://github.com/zed-industries/zed -b main zed

    - name: Build Executable
      run: |
        cd zed
        cargo build --release

    - name: Compile Setup Wizard
      uses: Minionguyjpro/Inno-Setup-Action@v1.2.2
      with:
        path: zed_wizard.iss
        options: /O+
        
    - name: Upload Setup Wizard
      uses: actions/upload-artifact@v4
      with:
        name: setup
        path: Output\zed_setup.exe

  Upload:
    needs: [Check, Build]
    if: needs.Check.outputs.should_run == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Download Release Folder
        uses: actions/download-artifact@v4
        with:
          name: setup
          path: Output

      - name: Setup Git Environment
        run: |
          git config --global user.email 41898282+github-actions[bot]@users.noreply.github.com
          git config --global user.name github-actions[bot]
          
      - name: Upload to Releases
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: ${{ needs.Check.outputs.outputs.tag }}
          tag_name: ${{ needs.Check.outputs.tag }}
          files: Output/zed_setup.exe
